{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\r\n\r\nexport const Daily = defineDocumentType(() => ({\r\n    name: \"Daily\",\r\n    contentType: \"mdx\",\r\n    filePathPattern: `daily/*.mdx`,\r\n    fields: {\r\n        title: { type: \"string\", required: true },\r\n        date: { type: \"string\", required: true },\r\n        description: { type: \"string\", required: true },\r\n        category: { type: \"string\", required: true },\r\n        thumbnailUrl: { type: \"string\", required: true },\r\n    },\r\n    computedFields: {\r\n      slug: {\r\n        type: \"string\",\r\n        resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, \"\"),\r\n      },\r\n    },\r\n}));\r\n\r\n\r\nexport const Gallery = defineDocumentType(() => ({\r\n    name: \"Gallery\",\r\n    contentType: \"mdx\",\r\n    filePathPattern: `gallery/*.mdx`,\r\n    fields: {\r\n        title: { type: \"string\", required: true },\r\n        date: { type: \"string\", required: true },\r\n        description: { type: \"string\", required: true },\r\n        category: { type: \"string\", required: true },\r\n        thumbnailUrl: { type: \"string\", required: true },\r\n    },\r\n    computedFields: {\r\n        slug: {\r\n          type: \"string\",\r\n          resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, \"\"),\r\n        },\r\n      },\r\n}));\r\n\r\n\r\n\r\nexport const Project = defineDocumentType(() => ({\r\n    name: \"Project\",\r\n    contentType: \"mdx\",\r\n    filePathPattern: `project/*.mdx`,\r\n    fields: {\r\n        title: { type: \"string\", required: true },\r\n        date: { type: \"string\", required: true },\r\n        description: { type: \"string\", required: true },\r\n        category: { type: \"string\", required: true },\r\n        thumbnailUrl: { type: \"string\", required: true },\r\n    },\r\n    computedFields: {\r\n        slug: {\r\n          type: \"string\",\r\n          resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, \"\"),\r\n        },\r\n      },\r\n}));\r\n\r\n\r\nexport const Work = defineDocumentType(() => ({\r\n    name: \"Work\",\r\n    contentType: \"mdx\",\r\n    filePathPattern: `work/*.mdx`,\r\n    fields: {\r\n        title: { type: \"string\", required: true },\r\n        date: { type: \"string\", required: true },\r\n        description: { type: \"string\", required: true },\r\n        category: { type: \"string\", required: true },\r\n        thumbnailUrl: { type: \"string\", required: true },\r\n    },\r\n    computedFields: {\r\n        slug: {\r\n          type: \"string\",\r\n          resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, \"\"),\r\n        },\r\n      },\r\n}));\r\n\r\n\r\nexport default makeSource({\r\n    contentDirPath: \"posts\",\r\n    documentTypes: [Daily, Gallery, Work, Project],\r\n})"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAExC,IAAM,QAAQ,mBAAmB,OAAO;AAAA,EAC3C,MAAM;AAAA,EACN,aAAa;AAAA,EACb,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACJ,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,UAAU,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC3C,cAAc,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EACnD;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AAAA,IAChE;AAAA,EACF;AACJ,EAAE;AAGK,IAAM,UAAU,mBAAmB,OAAO;AAAA,EAC7C,MAAM;AAAA,EACN,aAAa;AAAA,EACb,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACJ,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,UAAU,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC3C,cAAc,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EACnD;AAAA,EACA,gBAAgB;AAAA,IACZ,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AAAA,IAChE;AAAA,EACF;AACN,EAAE;AAIK,IAAM,UAAU,mBAAmB,OAAO;AAAA,EAC7C,MAAM;AAAA,EACN,aAAa;AAAA,EACb,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACJ,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,UAAU,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC3C,cAAc,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EACnD;AAAA,EACA,gBAAgB;AAAA,IACZ,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AAAA,IAChE;AAAA,EACF;AACN,EAAE;AAGK,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC1C,MAAM;AAAA,EACN,aAAa;AAAA,EACb,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACJ,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,UAAU,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC3C,cAAc,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EACnD;AAAA,EACA,gBAAgB;AAAA,IACZ,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AAAA,IAChE;AAAA,EACF;AACN,EAAE;AAGF,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,OAAO,SAAS,MAAM,OAAO;AACjD,CAAC;",
  "names": []
}
